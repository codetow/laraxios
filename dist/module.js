import e from"axios";let t;var r;(r=t||(t={})).GET="get",r.POST="post",r.DELETE="delete";const a=e=>{let r={},a=t.GET;if("post"===e.method||"put"===e.method||"patch"===e.method){const o=(e=>{const t=e=>e instanceof Blob?e:"boolean"==typeof e?e?"1":"0":`${e}`,r=new FormData;return e&&Object.entries(e).forEach((([e,a])=>{Array.isArray(a)?a.forEach(((a,o)=>{r.append(`${e}[${o}]`,t(a))})):r.append(e,t(a))})),r})(e.data);o.append("_method",e.method),r=o,a=t.POST}else"delete"===e.method&&(r={},a=t.DELETE);const o={...e,method:a,params:e.params||{},data:r};return o.baseURL&&(o.baseURL=(e=>{const t=e.baseURL?.trim();if(t?.length&&e.url&&"/"===e.url[0]){const{origin:e}=new URL(t);return`${e}`}return e.baseURL})(e)),o},o=e=>({errorHandler:e=>console.error("LARAVEL API ERROR: "+(e?.response?.statusText||"Unknown")),...e});var s=e.create({withCredentials:!0,headers:{Accept:"application/json"}});var n=async t=>{const r=o(t),n=r.errorHandler;delete r.errorHandler;try{return await s.request(a(r))}catch(t){return e.isAxiosError(t)&&t.response&&n?(n(t),Promise.resolve(t.response)):Promise.reject(t)}};const d=s;var c=e=>({request:t=>n({...e,...t}),get:(t,r)=>n({url:t,method:"get",...{...e,...r}}),post:(t,r,a)=>n({url:t,data:r,method:"post",...{...e,...a}}),put:(t,r,a)=>n({url:t,data:r,method:"put",...{...e,...a}}),patch:(t,r,a)=>n({url:t,data:r,method:"patch",...{...e,...a}}),delete:(t,r)=>n({url:t,method:"delete",...{...e,...r}}),sanctum:{csrf:t=>t?n({...e,baseURL:"",url:t}):e?.baseURL?n({...e,url:"/sanctum/csrf-cookie"}):void 0}});export{d as axiosInstance,c as default};
//# sourceMappingURL=module.js.map
