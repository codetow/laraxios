{"mappings":";AAEA,+BAAuC,SAAQ,kBAAkB;IAC/D,YAAY,CAAC,EAAE,SAAS,GAAG,oBAAoB,CAAA;CAChD;AAED;IACE,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IAClE,GAAG,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IAC3E,IAAI,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IAChG,GAAG,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/F,KAAK,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IACjG,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,CAAC,EAAE,qBAAqB,KAAK,OAAO,CAAC,WAAW,CAAC,CAAC;IAClG,OAAO,EAAE;QACP,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,KAAK,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAA;KACpD,CAAA;CACF;AAED,wBACE,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC,GACrC,MAAM,GACN,MAAM,GACN,OAAO,GACP,IAAI,CAAA;AAER,mBAA0B;IAAE,CAAC,GAAG,EAAE,MAAM,GAAG,gBAAgB,CAAA;CAAE,CAAA;AAQ7D,mBAA0B,aAAa,CAAA;AAEvC;IACE,CAAC,KAAK,EAAE,UAAU,GAAG,IAAI,CAAA;CAC1B;yCIjC+B,qBAAqB,KAAG,gBAAgB;AAAxE,wBAwFE","sources":["src/src/types.ts","src/src/utils.ts","src/src/axios-instance.ts","src/src/request.ts","src/src/laraxios.ts","src/laraxios.ts"],"sourcesContent":[null,null,null,null,null,"import { ApiResponse, LaraxiosInstance, LaraxiosRequestConfig, RequestData } from './types'\nimport laraxiosRequest from './request'\nimport { AxiosResponse } from 'axios'\n\nexport default (configuration?: LaraxiosRequestConfig): LaraxiosInstance => ({\n  request (config?: LaraxiosRequestConfig) {\n    return laraxiosRequest({ ...configuration, ...config })\n  },\n  /**\n   * GET Request.\n   * @param url\n   * @param config\n   */\n  get (url: string, config?: LaraxiosRequestConfig): Promise<AxiosResponse> {\n    return laraxiosRequest({\n      url,\n      method: 'get',\n      ...{ ...configuration, ...config }\n    })\n  },\n  /**\n   * POST Request.\n   * @param url\n   * @param data\n   * @param config\n   */\n  post (url: string, data?: RequestData, config?: LaraxiosRequestConfig): Promise<ApiResponse> {\n    return laraxiosRequest({\n      url,\n      data,\n      method: 'post',\n      ...{ ...configuration, ...config }\n    })\n  },\n  /**\n   * PUT Request.\n   * @param url\n   * @param data\n   * @param config\n   */\n  put (url: string, data?: RequestData, config?: LaraxiosRequestConfig): Promise<ApiResponse> {\n    return laraxiosRequest({\n      url,\n      data,\n      method: 'put',\n      ...{ ...configuration, ...config }\n    })\n  },\n  /**\n   * PATCH Request.\n   * @param url\n   * @param data\n   * @param config\n   */\n  patch (\n    url: string,\n    data?: RequestData,\n    config?: LaraxiosRequestConfig\n  ): Promise<ApiResponse> {\n    return laraxiosRequest({\n      url,\n      data,\n      method: 'patch',\n      ...{ ...configuration, ...config }\n    })\n  },\n  /**\n   * DELETE Request.\n   * @param url\n   * @param config\n   */\n  delete (url: string, config?: LaraxiosRequestConfig): Promise<ApiResponse> {\n    return laraxiosRequest({\n      url,\n      method: 'delete',\n      ...{ ...configuration, ...config }\n    })\n  },\n  sanctum: {\n    /**\n     * Send /sanctum/csrf request.\n     * @param url\n     */\n    csrf (url?: string): Promise<ApiResponse> | void {\n      if (url) {\n        return laraxiosRequest({ ...configuration, baseURL: '', url })\n      }\n      if (configuration?.baseURL) {\n        return laraxiosRequest({ ...configuration, url: '/sanctum/csrf-cookie' })\n      }\n    }\n  }\n})\n"],"names":[],"version":3,"file":"types.d.ts.map"}