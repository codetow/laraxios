{"mappings":";AAEA,+BAAuC,SAAQ,kBAAkB;IAC/D,YAAY,CAAC,EAAE,SAAS,GAAG,oBAAoB,CAAA;CAChD;AAID,wBACE,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC,GACrC,MAAM,GACN,MAAM,GACN,OAAO,GACP,IAAI,CAAA;AAER,mBAA0B;IAAE,CAAC,GAAG,EAAE,MAAM,GAAG,gBAAgB,CAAA;CAAE,CAAA;AAQ7D;IACE,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,GAAG,IAAI,CAAA;CAC/B;gCGrBsB,WAAW,kBAAkB,qBAAqB;;qBAOrD,qBAAqB;IAGvC;;;;OAIG;aACO,MAAM,WAAW,qBAAqB;IAOhD;;;;;OAKG;cACQ,MAAM,SAAS,WAAW,WAAW,qBAAqB;IAQrE;;;;;OAKG;aACO,MAAM,SAAS,WAAW,WAAW,qBAAqB;IAQpE;;;;;OAKG;eAEI,MAAM,SACJ,WAAW,WACT,qBAAqB;IAShC;;;;OAIG;gBACU,MAAM,WAAW,qBAAqB;;QAQjD;;;WAGG;mBACS,MAAM;;;AArFtB,wBA8FE","sources":["src/src/types.ts","src/src/utils.ts","src/src/request.ts","src/src/laraxios.ts","src/laraxios.ts"],"sourcesContent":[null,null,null,null,"import { LaraxiosRequestConfig, RequestData } from './types'\r\nimport laraxiosRequest from './request'\r\nimport { AxiosStatic } from 'axios'\r\n\r\nexport default (axios: AxiosStatic, configuration?: LaraxiosRequestConfig) => ({\r\n  axiosInstance: axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n      Accept: 'application/json'\r\n    }\r\n  }),\r\n  request (config?: LaraxiosRequestConfig) {\r\n    return laraxiosRequest(axios, this.axiosInstance, { ...configuration, ...config })\r\n  },\r\n  /**\r\n   * GET Request.\r\n   * @param url\r\n   * @param config\r\n   */\r\n  get (url: string, config?: LaraxiosRequestConfig) {\r\n    return laraxiosRequest(axios, this.axiosInstance, {\r\n      url,\r\n      method: 'get',\r\n      ...{ ...configuration, ...config }\r\n    })\r\n  },\r\n  /**\r\n   * POST Request.\r\n   * @param url\r\n   * @param data\r\n   * @param config\r\n   */\r\n  post (url: string, data?: RequestData, config?: LaraxiosRequestConfig) {\r\n    return laraxiosRequest(axios, this.axiosInstance, {\r\n      url,\r\n      data,\r\n      method: 'post',\r\n      ...{ ...configuration, ...config }\r\n    })\r\n  },\r\n  /**\r\n   * PUT Request.\r\n   * @param url\r\n   * @param data\r\n   * @param config\r\n   */\r\n  put (url: string, data?: RequestData, config?: LaraxiosRequestConfig) {\r\n    return laraxiosRequest(axios, this.axiosInstance, {\r\n      url,\r\n      data,\r\n      method: 'put',\r\n      ...{ ...configuration, ...config }\r\n    })\r\n  },\r\n  /**\r\n   * PATCH Request.\r\n   * @param url\r\n   * @param data\r\n   * @param config\r\n   */\r\n  patch (\r\n    url: string,\r\n    data?: RequestData,\r\n    config?: LaraxiosRequestConfig\r\n  ) {\r\n    return laraxiosRequest(axios, this.axiosInstance, {\r\n      url,\r\n      data,\r\n      method: 'patch',\r\n      ...{ ...configuration, ...config }\r\n    })\r\n  },\r\n  /**\r\n   * DELETE Request.\r\n   * @param url\r\n   * @param config\r\n   */\r\n  delete (url: string, config?: LaraxiosRequestConfig) {\r\n    return laraxiosRequest(axios, this.axiosInstance, {\r\n      url,\r\n      method: 'delete',\r\n      ...{ ...configuration, ...config }\r\n    })\r\n  },\r\n  sanctum: {\r\n    /**\r\n     * Send /sanctum/csrf request.\r\n     * @param url\r\n     */\r\n    csrf (url?: string) {\r\n      if (url) {\r\n        return laraxiosRequest(axios, this.axiosInstance, { ...configuration, baseURL: '', url })\r\n      }\r\n      if (configuration?.baseURL) {\r\n        return laraxiosRequest(axios, this.axiosInstance, { ...configuration, url: '/sanctum/csrf-cookie' })\r\n      }\r\n    }\r\n  }\r\n})\r\n"],"names":[],"version":3,"file":"types.d.ts.map"}