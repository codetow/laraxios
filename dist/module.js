import e from"axios";let t;var r;(r=t||(t={})).GET="get",r.POST="post",r.DELETE="delete";const o=e=>{let r={},o=t.GET;if("post"===e.method||"put"===e.method||"patch"===e.method){const a=(e=>{const t=e=>e instanceof Blob?e:"boolean"==typeof e?e?"1":"0":`${e}`,r=new FormData;return e&&Object.entries(e).forEach((([e,o])=>{Array.isArray(o)?o.forEach(((o,a)=>{r.append(`${e}[${a}]`,t(o))})):r.append(e,t(o))})),r})(e.data);a.append("_method",e.method),r=a,o=t.POST}else"delete"===e.method&&(r={},o=t.DELETE);const a={...e,method:o,params:e.params||{},data:r};return a.baseURL&&(a.baseURL=(e=>{const t=e.baseURL?.trim();if(t?.length&&e.url&&"/"===e.url[0]){const{origin:e}=new URL(t);return`${e}`}return e.baseURL})(e)),a},a=e=>({errorHandler:e=>console.error("LARAVEL API ERROR: "+(e?.response?.statusText||"Unknown")),...e});var s=e.create({withCredentials:!0,headers:{Accept:"application/json"}});var n=async t=>{const r=a(t),n=r.errorHandler;delete r.errorHandler;try{return await s.request(o(r))}catch(t){return e.isAxiosError(t)&&t.response&&n?(n(t),Promise.resolve(t.response)):Promise.reject(t)}},d=e=>({request:t=>n({...e,...t}),get:(t,r)=>n({url:t,method:"get",...{...e,...r}}),post:(t,r,o)=>n({url:t,data:r,method:"post",...{...e,...o}}),put:(t,r,o)=>n({url:t,data:r,method:"put",...{...e,...o}}),patch:(t,r,o)=>n({url:t,data:r,method:"patch",...{...e,...o}}),delete:(t,r)=>n({url:t,method:"delete",...{...e,...r}}),sanctum:{csrf:t=>t?n({...e,baseURL:"",url:t}):e?.baseURL?n({...e,url:"/sanctum/csrf-cookie"}):void 0}});export{d as default};
//# sourceMappingURL=module.js.map
