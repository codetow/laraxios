import e from"axios";let r;var t;(t=r||(r={})).GET="get",t.POST="post",t.DELETE="delete";const a=e=>{let t={},a=r.GET;if("post"===e.method||"put"===e.method||"patch"===e.method){const o=(e=>{const r=e=>e instanceof Blob?e:"boolean"==typeof e?e?"1":"0":`${e}`,t=new FormData;return e&&Object.entries(e).forEach((([e,a])=>{Array.isArray(a)?a.forEach(((a,o)=>{t.append(`${e}[${o}]`,r(a))})):t.append(e,r(a))})),t})(e.data);o.append("_method",e.method),t=o,a=r.POST}else"delete"===e.method&&(t={},a=r.DELETE);const o={...e,method:a,params:e.params||{},data:t};return o.baseURL&&(o.baseURL=(e=>{const r=e.baseURL?.trim();if(r?.length&&e.url&&"/"===e.url[0]){const{origin:e}=new URL(r);return`${e}`}return e.baseURL})(e)),o},o=e=>({errorHandler:e=>console.error("LARAVEL API ERROR: "+(e?.response?.statusText||"Unknown")),...e});var s=e.create({withCredentials:!0,headers:{Accept:"application/json"}});var n=async r=>{const t=o(r),n=t.errorHandler;delete t.errorHandler;try{return await s.request(a(t))}catch(r){return e.isAxiosError(r)&&r.response&&n?(n(r),Promise.resolve(r.response)):Promise.reject(r)}},d=e=>({request:r=>n({...e,...r}),get:(r,t)=>n({url:r,method:"get",...{...e,...t}}),post:(r,t,a,o)=>n({url:r,data:t,params:a,method:"post",...{...e,...o}}),put:(r,t,a,o)=>n({url:r,data:t,params:a,method:"put",...{...e,...o}}),patch:(r,t,a,o)=>n({url:r,data:t,params:a,method:"patch",...{...e,...o}}),delete:(r,t,a)=>n({url:r,params:t,method:"delete",...{...e,...a}}),sanctum:{csrf:r=>r?n({...e,baseURL:"",url:r}):e?.baseURL?n({...e,url:"/sanctum/csrf-cookie"}):void 0}});export{d as default};
//# sourceMappingURL=module.js.map
